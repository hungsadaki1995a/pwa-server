{"version":3,"sources":["webpack:///./src/router/album.router.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAA8B;AACJ;AACQ;AAE3B,MAAM,WAAW,GAAG,8CAAO,CAAC,MAAM,EAAE,CAAC;AAE5C,MAAM,IAAI,GAAG,IAAI,uCAAI,CAAC;IACrB,gBAAgB,EAAE,wJAAwJ;IAC1K,GAAG,EAAE;QACJ,kBAAkB,EAAE,KAAK;KACzB;CACD,CAAC;AAEF,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACxC,IAAI;QACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACnF,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,CAAC,OAAO,EAAE,CAAC;KACjB;IAAC,OAAO,CAAC,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KACxE;AACF,CAAC,EAAC;AAEF,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACzC,IAAI;QACH,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,MAAM,WAAW,GAAG,6CAA6C,IAAI,CAAC,IAAI,KAAK,CAAC;QAChF,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/C,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,EAAE,CAAC;KACjB;IAAC,OAAO,CAAC,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KACxE;AACF,CAAC,EAAC","file":"main.6938ab2b3fe4fb57a9bb.hot-update.js","sourcesContent":["import express from 'express';\r\nimport { Pool } from 'pg';\r\nimport { constants } from \"http2\";\r\n\r\nexport const albumRouter = express.Router();\r\n\r\nconst pool = new Pool({\r\n\tconnectionString: 'postgres://ohzdvanjcvhgww:f2b54928cdbd5258f3a4e05c7c340d1c8d13a55186cab1a806bd0b089bca98de@ec2-3-214-3-162.compute-1.amazonaws.com:5432/d9dlljd2n92mbj',\r\n\tssl: {\r\n\t\trejectUnauthorized: false\r\n\t}\r\n})\r\n\r\nalbumRouter.get('/', async (req, res) => {\r\n\ttry {\r\n\t\tconst client = await pool.connect();\r\n\t\tconst result = await client.query('SELECT * FROM album_category ORDER BY id DESC');\r\n\t\tres.status(constants.HTTP_STATUS_OK).send(result.rows);\r\n\t\tclient.release();\r\n\t} catch (e) {\r\n\t\tres.status(constants.HTTP_STATUS_INTERNAL_SERVER_ERROR).send(e.message);\r\n\t}\r\n})\r\n\r\nalbumRouter.post('/', async (req, res) => {\r\n\ttry {\r\n\t\tconst body = req.body;\r\n\t\tconst client = await pool.connect();\r\n\t\tconst queryString = `INSERT INTO album_category(name) values(\\'${body.name}\\')`;\r\n\t\tconst result = await client.query(queryString);\r\n\t\tres.status(constants.HTTP_STATUS_OK).send({});\r\n\t\tclient.release();\r\n\t} catch (e) {\r\n\t\tres.status(constants.HTTP_STATUS_INTERNAL_SERVER_ERROR).send(e.message);\r\n\t}\r\n})\r\n"],"sourceRoot":""}