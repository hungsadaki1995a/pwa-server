{"version":3,"sources":["webpack:///./src/router/contact.router.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAA8B;AACJ;AACQ;AAE3B,MAAM,aAAa,GAAG,8CAAO,CAAC,MAAM,EAAE,CAAC;AAE9C,MAAM,IAAI,GAAG,IAAI,uCAAI,CAAC;IACrB,gBAAgB,EAAE,0JAA0J;IAC5K,GAAG,EAAE;QACJ,kBAAkB,EAAE,KAAK;KACzB;CACD,CAAC;AAEF,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC1C,IAAI;QACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC3D,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,CAAC,OAAO,EAAE,CAAC;KACjB;IAAC,OAAO,CAAC,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KACxE;AACF,CAAC,EAAC;AAEF,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC3C,IAAI;QACH,MAAM,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC;QAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,WAAW,GAAG,6EAA6E,gBAAgB,CAAC,IAAI,SAAS,gBAAgB,CAAC,YAAY,SAAS,gBAAgB,CAAC,OAAO,SAAS,gBAAgB,CAAC,KAAK,SAAS,gBAAgB,CAAC,OAAO,KAAK,CAAC;QACjQ,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/C,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,EAAE,CAAC;KACjB;IAAC,OAAO,CAAC,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,+CAAS,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KACxE;AACF,CAAC,EAAC","file":"main.646a9e68cb66c9bf670d.hot-update.js","sourcesContent":["import express from 'express';\r\nimport { Pool } from 'pg';\r\nimport { constants } from \"http2\";\r\n\r\nexport const contactRouter = express.Router();\r\n\r\nconst pool = new Pool({\r\n\tconnectionString: 'postgres://ajoxgdsnxjmihp:2e26b14ceefdabcf3b4e047fedf9fa0c74286bf019c7484a17eae76e3179eed1@ec2-34-206-220-95.compute-1.amazonaws.com:5432/dbiv4s763p8fan',\r\n\tssl: {\r\n\t\trejectUnauthorized: false\r\n\t}\r\n})\r\n\r\ncontactRouter.get('/', async (req, res) => {\r\n\ttry {\r\n\t\tconst client = await pool.connect();\r\n\t\tconst result = await client.query('SELECT * FROM contact');\r\n\t\tres.status(constants.HTTP_STATUS_OK).send(result.rows);\r\n\t\tclient.release();\r\n\t} catch (e) {\r\n\t\tres.status(constants.HTTP_STATUS_INTERNAL_SERVER_ERROR).send(e.message);\r\n\t}\r\n})\r\n\r\ncontactRouter.post('/', async (req, res) => {\r\n\ttry {\r\n\t\tconst introduceRequest = req.body;\r\n\t\tconst client = await pool.connect();\r\n\t\tlet queryString = `INSERT INTO contact(name, phone_number, address, email, content) values(\\'${introduceRequest.name}\\', \\'${introduceRequest.phone_number}\\', \\'${introduceRequest.address}\\', \\'${introduceRequest.email}\\', \\'${introduceRequest.content}\\')`;\r\n\t\tconst result = await client.query(queryString);\r\n\t\tres.status(constants.HTTP_STATUS_OK).send({ result });\r\n\t\tclient.release();\r\n\t} catch (e) {\r\n\t\tres.status(constants.HTTP_STATUS_INTERNAL_SERVER_ERROR).send(e.message);\r\n\t}\r\n})"],"sourceRoot":""}